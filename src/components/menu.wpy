<template lang="wxml">

    <view class='menu'>
        <view class='menuLeft'>
            <scroll-view
                scroll-left="{{scrollLeft}}"
                scroll-x
                scroll-with-animation="{{true}}"
                class='menuSroll'>
                    <repeat for="{{navList}}" key="index" index="index" item="item">
                        <view class="{{currentName == item.cat_spell ? 'ina_cur' : ''}}"
                            id="{{item.cat_spell}}"
                            @tap="goNext( {{item.cat_ids}},{{item.id}},{{item.cat_api_type}},{{item.cat_spell}} )">{{item.cat_name}}</view>
                    </repeat>
            </scroll-view>
        </view>
        <view class='menuBtn' @tap='showChannel'><image src="../res/images/menuSort.png" /></view>
    </view>

    <view class='channelMask' wx-if='{{channelFlag}}' @tap='hideChannel'></view>
    <view class="channelWrap {{channelFlag ? 'showWrap' : ''}}">
        <view class='channelBack' @tap='hideChannel'>
            <image src='../res/images/home_back.png' class='backBtn' />
        </view>
        <view class='channelCon'>
            <view class='channelBt'>编辑频道</view>
            <view class='channelTip'>长按可拖动顺序</view>
            <!-- 编辑频道 -->
            <Drag id="drag"
                @sortEnd.user="upDateList"
                :listData="navList"
                :columns="size"
                :scrollTop="scrollTop">
            </Drag>
        </view>
    </view>
    
</template>

<script>
    import wepy from 'wepy';
    import api from './../api/ApiConstants';
    import Drag from './drag';
    export default class Menu extends wepy.component {
        data = {
            currentName: 'jiaodian',
            scrollLeft: 326,
            winWidth: 0,
            navList:[],
            size: 3,
            scrollTop: 0,
            channelFlag: false,
            dragFlag: true
        };
        onLoad(){
            const that = this;
            that.winWidth = wx.getSystemInfoSync().windowWidth || 375;
            that.getMenuList();
        };
        components = {
          Drag:Drag  
        };
        methods = {
            goNext ( cat_id,menu_id,type,cat_spell,e ){
                let that = this;
                var e_id = e.target.id,
                    e_left = e.target.offsetLeft;
                that.changeColumn( cat_id,menu_id,type,cat_spell,e_id,e_left );
            },
            // 拖拽完成
            upDateList(_list) {
                var temData = [];
                for( let i=0; i<_list.length; i++ ){
                    temData.push( _list[i].data );
                }
                this.navList = temData;
                this.$apply();
                var _item = this.navList[0];
                this.changeColumn( _item.cat_ids,_item.id,_item.cat_api_type,_item.cat_spell,_item.cat_spell,0 );
                wx.setStorage({
                    key: 'afterData',
                    data: this.navList
                })
            },
            showChannel(e){
                
                // if( this.dragFlag ){
                    this.$broadcast('getListData',this.navList);
                    // this.dragFlag = false;
                // }
                this.channelFlag = true;
                this.$apply();
            },
            hideChannel(e){
                this.channelFlag = false;
                this.$apply();
                this.$broadcast('getListData',this.navList);
            }
        };
        changeColumn( cat_id,menu_id,type,cat_spell,item_id,item_left ){
            let that = this;
            if( that.currentName == cat_spell ){
                return false;
            }else{
                that.currentName = cat_spell;
                let itemId =item_id,
                    itemLeft = item_left;
                var query = wx.createSelectorQuery();
                query.select('#'+itemId).boundingClientRect(function (rect) {
                    var setLeft = itemLeft - that.winWidth/2 + rect.width/2;
                    that.scrollLeft = setLeft;
                    that.$apply();
                }).exec();
                // 传值给父页面
                that.$emit('tabClick',cat_id,menu_id,type,cat_spell);
            }
        }
        async getMenuList(){
            let that = this;
            let params = {
                query:{
                    ua_from:'program'
                }
            }
            api.loading();
            const res = await api.GETMENU(params);
            console.log( res.data );
            if( res.data.code == 200 ){
                // 判断是否缓存过栏目列表
                let initialData = wx.getStorageSync('initialData');
                if( initialData.length > 0 ){
                    // 判断当前栏目列表是否和上次相同
                    if( JSON.stringify(initialData) == JSON.stringify( res.data.data ) ){
                        // 判断是否改变过栏目列表顺序
                        let afterData = wx.getStorageSync('afterData');
                        if( afterData.length > 0 ){
                            that.navList = afterData;
                        }else{
                            that.navList = res.data.data;
                        }
                    } else {
                        // 栏目数据有改变，重新赋值,清空之前保存的自定义栏目顺序
                        wx.setStorage({
                            key: 'initialData',
                            data: res.data.data
                        })
                        wx.setStorage({
                            key: 'afterData',
                            data: []
                        })
                        that.navList = res.data.data;
                    }
                }else{
                    // 没有栏目缓存
                    wx.setStorage({
                        key: 'initialData',
                        data: res.data.data
                    })
                    that.navList = res.data.data;
                }

                that.currentName = that.navList[0].cat_spell;
                that.$emit('initMenu',that.navList[0]);
                // that.$broadcast('getListData',that.navList);
                api.finishLoading();
                that.$apply();
            }else{
                api.finishLoading();
                wepy.showToast({
                    title: '加载失败 ~',
                    icon: 'none',
                    duration: 2000
                });
            }
            
        }
        // 按照某项属性重新排序
        compare (property) {
            return function(a,b){
                var value1 = a[property];
                var value2 = b[property];
                return value1 - value2;
            }
        };
    }

</script>

<style lang="less">
    .menu{
        display: flex;
        height: 82rpx;
        padding: 0 0 0 24rpx;
        line-height: 82rpx;
        background: #C92C1D;
        .menuBtn{
            padding: 20rpx 24rpx;
            image{
                width: 40rpx;
                height: 40rpx;
                vertical-align: top;
            }
        }
        .menuLeft{
            flex: 1;
            overflow: hidden;
        }
    }

    .menuSroll{
        height: 82rpx;
        line-height: 82rpx;
        white-space: nowrap;
        width: 100%;
        view{
            margin-right: 70rpx;
            font-size: 24rpx;
            font-size: 30rpx;
            color:rgba(255,255,255,0.6);
            display: inline-block;
            &.ina_cur{
                font-weight: bold;
                font-size: 36rpx;
                color: #FFFFFF;
                position: relative;
                &::after{
                    position: absolute;
                    content: '';
                    width: 20rpx;
                    height: 4rpx;
                    left: 50%;
                    margin-left: -10rpx;
                    background: #fff;
                    bottom: 12rpx;
                    border-radius: 8rpx;
                }
            }
        }
    }

    .channelMask{
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background: rgba(0,0,0,0.6);
        z-index: 66;
    }

    .channelWrap{
        position: fixed;
        top: 0;
        bottom: 0;
        left: 0;
        z-index: 68;
        width: 540rpx;
        background:rgba(247,247,247,1);
        transform: translateX(-200%);
        transition: transform 0.3s linear;
        &.showWrap{
            transform: translateX(0);
        }
        .channelBack{
            width: 44rpx;
            height: 44rpx;
            padding: 20rpx 24rpx;
            .backBtn{
                display: block;
                width: 44rpx;
                height: 44rpx;
            }
        }
        .channelCon{
            padding: 0 60rpx;
            .channelBt{
                font-size: 36rpx;
                color: #EA0A19;
                line-height: 50rpx;
            }
            .channelTip{
                color: #818181;
                font-size: 24rpx;
                line-height: 34rpx;
                margin-bottom: 20rpx;
            }
        }
    }

</style>
