<template>
    <view class="wrap">
        <!-- 菜单 -->
        <Menu @tabClick.user="tabChange"></Menu>
        
        <!-- 编辑频道 -->
        <!-- <EditChannel></EditChannel> -->

        <!-- 栏目内容 -->
        <view class="content">
            <scroll-view
                @scroll="handleScroll"
                @scrolltoupper="upper"
                @scrolltolower="loadMore"
                scroll-top="{{scrollTop}}"
                scroll-y
                scroll-with-animation="{{true}}"
                class='wrapSroll'>
                <Column 
                    :colType="columnType" 
                    :colType.sync="columnType"
                    :colPage="columnPage"
                    :colPage.sync="columnPage"
                    :colId="menu_id"
                    :colId.sync="menu_id"
                    :colSpell="columnSpell"
                    :colSpell.sync="columnSpell"
                    ></Column>
            </scroll-view>
        </view>

    </view>
</template>

<script>
    import wepy from 'wepy';
    import Menu from '../../components/menu';
    import Column from '../../components/column';
    import EditChannel from '../../components/editChannel';
    export default class Index extends wepy.page {
        customData = {}  // 自定义数据
        customFunction ()　{}  //自定义方法

        onLoad () {}  // 在Page和Component共用的生命周期函数

        onShow () {}  // 只在Page中存在的页面生命周期函数
        // 只在Page实例中存在的配置数据，对应于原生的page.json文件
        config = {
            navigationBarTitleText: '网通社'
        };

        data = {
            columnType:'index',
            columnSpell:'jiaodian',
            columnPage:1,
            column_id:-1,
            menu_id:1,
        };  // 页面所需数据均需在这里声明，可用于模板数据绑定
        
        //声明页面中所引用的组件，或声明组件中所引用的子组件
        components = {
            Menu:Menu,
            Column:Column,
            EditChannel:EditChannel
        };  

        mixins = [];  // 声明页面所引用的Mixin实例

        computed = {};  // 声明计算属性（详见后文介绍）

        watch = {};  // 声明数据watcher（详见后文介绍）

        // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明
        methods = {
            // 接收子组件的值
            tabChange( cat_id,menu_id,type,cat_spell ){
                this.columnType = type;
                this.column_id = cat_id;
                this.menu_id = menu_id;
                this.columnPage = 1;
                this.columnSpell = cat_spell;
                //使用$broadcast事件广播，父组件向各个子组件发送广播事件
                this.$broadcast('requestType',cat_id,menu_id,type,cat_spell,this.columnPage);
            },
            handleScroll(){
                // console.log( 222 );
            },
            /* 下拉加载 */
            upper(){
                console.log( '加载更多' );
            },
            /* 上拉加载更多 */
            loadMore(){
                this.columnPage = this.columnPage*1 + 1;
                // this.$broadcast('requestType',cat_id,menu_id,type,cat_spell,this.columnPage);
                this.$broadcast('requestType',this.column_id,this.menu_id,this.columnType,this.columnSpell,this.columnPage);
            }
        };  

        events = {};  // 声明组件之间的事件处理函数
    }
</script>
<style lang="less">
    page{
        margin: 0;
        padding: 0;
        width: 100%;
        height: 100%;
        overflow-x: hidden;
        overflow-y: auto;
    }
    .wrapSroll{
        height: 100%;
        width: 100vw;
    }
    .wrap{
        width: 100%;
        height: 100%;
        display: flex;
        flex-direction: column;
        .content{
            flex: 1;
            overflow: hidden;
        }
    }

</style>

