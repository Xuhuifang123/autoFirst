<template>
    <!-- <import src="/wxParse/wxParse.wxml"/> -->
    <view class="wrap">
        <view class="artice_con">
            <view class="author flex verCenter">
                <view class='flex fullFlex'>
                    <image src='{{storyInfo.photo}}' class='authorPhoto'/>
                    <view class='fullFlex authorInfo'>
                        <view class='authorInfo_bt'>{{storyInfo.authorname}}</view>
                        <view class='authorInfo_time'><text>{{storyInfo.add_date}}</text></view>
                    </view>
                    <view class='special_label' wx:if='{{storyInfo.tagname}}'>{{storyInfo.tagname}}</view>
                </view>

            </view>
            <view class="artice_nr">
                <view class="artice_bt">{{storyInfo.title}}</view>
                <view class="artice_main">
                    <!-- <template is="wxParse" data="{{wxParseData:parserContent.nodes}}"/> -->
                </view>
            </view>
            <view class="articleNumber">
                <view class='articleLook'><image src="../../res/images/iconlook.png" />{{storyInfo.pv}}</view>
                <!-- <view class='articleZan'><image src="../../res/images/articeZan.png" />{{storyInfo.like_count}}</view> -->
            </view>
            <view class="artice_share flex" wx:if='{{storyInfo}}'>
                <button class='shareMessage' open-type="share"><image src="../../res/images/loginWeixin.png" />分享至好友</button>
                <button class='shareTimeline' type='primary' @tap='share()'><image src="../../res/images/iconShareLine.png" />分享至朋友圈</button>
            </view>

            <canvas canvas-id="storyCanvas" style="width:282px; height:365px;"></canvas>

            <!-- <shareSelectLayout></shareSelectLayout> -->

            <view class="recommend">
                <view class="recommend_bt"><image src='../../res/images/icon_recommend.png' /> 相关推荐</view>
                <view class="recommend_list">
                    <block wx:for='{{storyInfo.hot_info}}' wx:key="index">
                        <view wx:if='{{item.imgs && item.imgs.length > 0}}' class="three_img recommend_list_dl" @tap="storyDetail({{item.id}})">
                            <view class='recommend_list_bt'>{{item.title}}</view>
                            <view class="flex recommend_list_img">
                                <image wx:for="{{item.imgs}}" wx:key="inx" src='{{item}}'></image>
                            </view>
                            <view class='recommend_list_info'>
                                <text class="recommend_author">{{item.source}}</text>
                                <!-- <text class="recommend_top">置顶</text> -->
                                <view class="recommend_view"><image src="./../../res/images/iconlook.png" />{{item.pv}}</view>
                            </view>
                        </view>
                        <view wx:else class="recommend_list_dl one_img flex"  @tap="storyDetail({{item.id}})">
                            <view class="fullFlex recommend_list_dd">
                                <view class='recommend_list_bt'><a href="javascript:;">{{item.title}}</a></view>
                                <view class='recommend_list_info'>
                                    <text class="recommend_author">{{item.source}}</text>
                                    <view class="recommend_view"><image src="./../../res/images/iconlook.png" />{{item.pv}}</view>
                                </view>
                            </view>
                            <image class='recommend_list_img' src='{{item.title_pic1}}'></image>
                        </view>
                    </block>
                </view>
            </view>

        </view>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import api from '../../../src/api/ApiConstants';
    import WxParse from '../../../src/wxParse/wxParse';
    import WxmlCanvas from './../../components/canvasJS/index';
    // import shareSelectLayout from './../../components/shareSelectLayout';
    export default class ShareStory extends wepy.page{
        config = {
            navigationBarTitleText: '文章详情'
        };
        components = {
            // WxParse: WxParse
            // shareSelectLayout:shareSelectLayout
        };
        onLoad(options){
            let that = this;
            that.getStoryCon( options.id );
        };
        data = {
            userInfo:{},
            storyInfo:{},
            parserName:'storyCon',
            parserContent: '',
            storyList:{},
            setShareInfor:[],
            Width:0,
            Height:0,
            ctx:null,
            storyImage:''
        };
        methods = {
            storyDetail:function(id){
                wepy.navigateTo({
                    url: '../../pages/detail/story?id='+id
                })
            },
        };

        share () {
            var that = this
            //获取系统信息，具体的属性请前往微信小程序官网查看
            wx.getSystemInfo({
                success: res => {
                    console.log(res);
                    that.Width = res.screenWidth;
                    that.Height = res.screenHeight;
                }
            })
            
            var qrcode = '../../res/images/APP.png'//二维码图片一般为网络图片后台生成
            var bgImgPath = that.storyImage //首先你需要准备一张背景图
            var width = that.Width
            var height = that.Height
            that.ctx = wx.createCanvasContext('storyCanvas')//创建 canvas 绘图上下文
            
            //画矩形 设置背景颜色
            that.ctx.rect(0,0,282,365);
            that.ctx.fillStyle = "#fff";
            that.ctx.fill();
            
            //将背景图绘制到画布中
            that.ctx.drawImage(bgImgPath, 0, 0, 282, 188)
            that.ctx.save() 

            //下面你需要描述的文字，因为canvas文字不能够换行，所以这里我们按行一行一行写，当然你也可以自己写一个函数将文字截成一段一段的循环放入画布中
            //标题
            let title = {
                x: 12,
                y: 198,
                width: 258,
                height: 20,
                line: 2,
                color: '#000',
                size: 15,
                align: 'left',
                baseline: 'top',
                text: that.storyInfo.title,
                bold: true
            };
            that.textWrap(title);

            // that.ctx.beginPath()
            // that.ctx.moveTo(20, 20)
            // that.ctx.lineTo(20, 100)
            // that.ctx.setStrokeStyle('#000')
            // that.ctx.stroke()

            that.ctx.drawImage(qrcode, 24, 258, 98, 98);

            that.ctx.save();
            that.ctx.setFillStyle('#000000');
            that.ctx.setFontSize(12);
            that.ctx.setTextAlign('left');
            that.ctx.setTextBaseline('top');
            that.ctx.fillText( '长按图片识别小程序码', 138, 294);
            that.ctx.fillText( '进入汽势传媒阅读全文', 138, 310);
            that.ctx.draw()

            //将canvas画布转化为图片
            wx.canvasToTempFilePath({
                x: 0,
                y: 0,
                width: that.Width,
                height: that.Height,
                destWidth: that.Width,
                destHeight: that.Height,
                canvasId: 'storyCanvas',
                success: function (res) {
                    console.log(res.tempFilePath);
                    /* 这里 就可以显示之前写的 预览区域了 把生成的图片url给image的src */
                    that.setData({
                        imagePath: res.tempFilePath,
                        hidden: false
                    })
                },
                fail: function (res) {
                    console.log(res)
                }
            })
        }

        async getStoryCon( storyId ){
            let that = this;
            let params = {
                query:{
                    id:storyId
                }
            }
            api.loading();
            const res = await api.GETSTORY(params);
            console.log( res );
            if( res.data.code == 200 ){
                const storyDetail = res.data.data;
                that.storyInfo = res.data.data;
                that.parserContent = WxParse.wxParse('parserContent', 'html', that.storyInfo.content, that, 0);
                api.finishLoading();
                that.$apply();
                that.saveImageLocal();
            }else{
                wepy.showToast({
                    title: '加载失败 ~',
                    icon: 'none',
                    duration: 2000
                });
            }
        };

        // 转发好友
        onShareAppMessage(options){
            let that = this;
            let imgUrl = that.storyInfo.photo;
            let storyTitle = that.storyInfo.title;
            let storyId = that.storyInfo.id;
            let setSharePath;
            setSharePath = 'pages/detail/story?id='+storyId;
            let shareObj = {
                title: storyTitle,
                imageUrl: imgUrl,
                path: setSharePath,
            };
            // 来自页面内的按钮的转发
            if( options.from == 'button' ){
                var eData = options.target.dataset;
                console.log( eData.name );     // shareBtn
                // 此处可以修改 shareObj 中的内容
                // shareObj.path = '/pages/btnname/btnname?btn_name='+eData.name;
            }
        };

        // 保存文章题图到本地
        saveImageLocal(){
            let that = this;
            wx.downloadFile({
                url: that.storyInfo.title_pic1,
                success: function(res) {
                    if (res.statusCode === 200){
                        let img = res.tempFilePath;
                        that.storyImage = img;
                        console.log( that.storyImage );
                        that.share();
                    }
                }
            })
        }

        // 文本换行
        textWrap (obj) {
            let that = this;
            let tr = that.getTextLine(obj);
            for (let i = 0; i < tr.length; i++) {
                if (i < obj.line){
                    let txt = {
                        x: obj.x,
                        y: obj.y + (i * obj.height),
                        color: obj.color,
                        size: obj.size,
                        align: obj.align,
                        baseline: obj.baseline,
                        text: tr[i],
                        bold: obj.bold
                    };
                    // if (i == obj.line - 1) {
                        // console.log( txt.text );
                        // txt.text = txt.text.substring(0, txt.text.length - 3) + '......';
                    // }
                    that.drawText(txt);
                }
            }
        };

        // 获取文本折行
        getTextLine (obj){
            let that = this;
            that.ctx.setFontSize(obj.size);
            let arrText = obj.text.split('');
            let line = '';
            let arrTr = [];
            for (let i = 0; i < arrText.length; i++) {
                var testLine = line + arrText[i];
                var metrics = that.ctx.measureText(testLine);
                var width = metrics.width;
                if (width > obj.width && i > 0) {
                    arrTr.push(line);
                    line = arrText[i];
                } else {
                    line = testLine;
                }
                if (i == arrText.length - 1) {
                    arrTr.push(line);
                }
            }
            return arrTr;
        };

        // 渲染文字
        drawText(obj) {
            let that = this;
            that.ctx.save();
            that.ctx.setFillStyle(obj.color);
            that.ctx.setFontSize(obj.size);
            that.ctx.setTextAlign(obj.align);
            that.ctx.setTextBaseline(obj.baseline);
            if (obj.bold) {
                console.log('字体加粗')
                that.ctx.fillText(obj.text, obj.x, obj.y - 0.5);
                that.ctx.fillText(obj.text, obj.x - 0.5, obj.y);
            }
            that.ctx.fillText(obj.text, obj.x, obj.y);
            if (obj.bold) {
                that.ctx.fillText(obj.text, obj.x, obj.y + 0.5);
                that.ctx.fillText(obj.text, obj.x + 0.5, obj.y);
            }
            that.ctx.restore();
        };


    }

</script>

<style lang="less">
    @import "../../../src/wxParse/wxParse.wxss";
    .flex{
        display: flex;
    }
    .fullFlex{
        flex: 1;
    }
    .verCenter{
        align-items: center;
    }
    .artice_con{
        background: #fff; 
        // 作者相关信息
        .author{
            padding: 34rpx 24rpx 20rpx 24rpx; 
            overflow: hidden;
            .authorPhoto{
                width: 64rpx; 
                height: 64rpx; 
                border-radius: 50%; 
                overflow: hidden; 
                margin-right: 20rpx;
            }
            .authorInfo{
                overflow: hidden; 
                width: 0; 
                padding-right: 10rpx;
                .authorInfo_bt{
                    font-weight: normal; 
                    font-size: 30rpx; 
                    color: #52A3FF; 
                    line-height: 40rpx; 
                    white-space: nowrap; 
                    text-overflow: ellipsis; 
                    overflow: hidden;
                }
                .authorInfo_time{
                    font-size: 24rpx; 
                    line-height: 24rpx; 
                    color: #818181;
                }
            }
            .special_label{ 
                height: 36rpx; 
                background: rgba(230,0,18,0.1);
                border-radius: 18rpx;
                color: rgba(255,38,0,1);
                font-size: 24rpx;
                padding: 0 20rpx;
                line-height: 36rpx;
                margin-right: 30rpx;
                margin-top: 14rpx;
            }
            .attention{
                width: 120rpx; 
                height: 48rpx; 
                border-radius: 3px; 
                border:1px solid rgba(201,44,29,1); 
                line-height: 48rpx; 
                text-align: center; 
                font-size: 24rpx; 
                color:rgba(201,44,29,1);
                text{
                    display: inline-block; 
                    width: 28rpx; 
                    height: 28rpx; 
                    vertical-align: top; 
                    margin: 10rpx 2px 0 0; 
                    background-image: url(//img.auto-first.cn/system/images/icon_attention.png);
                    background-size: 28rpx; 
                    background-position: center; 
                    background-repeat: no-repeat;
                }
                &.cur{
                    background:rgba(184,184,184,1);
                    border: 1px solid rgba(0, 0, 0, 0);
                }
            }
        }
        .artice_nr{
            padding: 0 24rpx 0 24rpx;
            background: #fff;
            .artice_bt{
                color:  #000000;
                font-size: 36rpx;
                line-height: 48rpx;
                font-weight: bold;
                margin-bottom: 20rpx;
            }
            .wxParse-p{
                text-indent: 0;
                color: #3A3A3A;
                font-size: 30rpx;
                line-height: 48rpx;
                margin-bottom: 40rpx;
                text-align: justify;
                image{
                    width: 100%;
                    display: block;
                    &.emotion{
                        display: inline;
                    }
                }
                video{ 
                    display: block; 
                    width: 100%; 
                }
                iframe{
                    display: block;
                    width: 100%;
                    height: 400rpx;
                }
            }
            .artice_views{
                height: 28rpx; 
                color: #999999; 
                font-size: 24rpx; 
                line-height: 28rpx;
                i{
                    display: inline-block;
                    width: 30rpx;
                    height: 28rpx;
                    background: url(//img.auto-first.cn/system/image/icon_read.png) no-repeat center center;
                    background-size: 100%; 
                    margin-right: 18rpx; 
                    vertical-align: top;
                }
            }
        }
        .preview .artice_nr{
            margin-bottom: 0;
            padding-bottom: 0;
        }
        .articleNumber{
            height: 32rpx;
            margin-bottom: 40rpx;
            display: flex;
            padding: 0 24rpx;
            .articleLook,.articleZan{
                font-size: 20rpx;
                color: #9D9D9D;
                line-height: 32rpx;
                margin-right: 30rpx;
            }
            .articleLook image{
                width: 32rpx;
                height: 20rpx;
                vertical-align: top;
                margin-top: 6rpx;
                margin-right: 6rpx;
            }
            .articleZan image{
                width: 32rpx;
                height: 32rpx;
                vertical-align: top;
                margin-right: 6rpx;
            }
        }
        .artice_share{
            padding: 0 76rpx;
            display: flex;
            justify-content: space-between;
            margin-bottom: 40rpx;
            button{
                padding: 0;
                font-size: 30rpx;
                line-height: 80rpx;
                border-radius: 40rpx;
                color: #6D7278;
                width: 280rpx;
                margin: 0;
                overflow: visible;
                border: 1px solid rgba(102,208,32,1);
                background-color: #fff;
                image{
                    vertical-align: top;
                    margin-right: 12rpx;
                }
            }
            button::after {
                display: none;
            }
            .shareMessage image{
                width: 44rpx;
                height: 38rpx;
                margin-top: 21rpx;
            }
            .shareTimeline image{
                width: 38rpx;
                height: 40rpx;
                margin-top: 20rpx;
            }

        }
    }
    .artice_nr .artice_main h1{ color: #333; margin-bottom: 30rpx; }
    .artice_nr .artice_main h2{ color: #333; margin-bottom: 30rpx; }
    .artice_nr .artice_main h3{ font-size: 36rpx; color: #333; margin-bottom: 30rpx; }
    .artice_nr .artice_main h4{ font-size: 32rpx; color: #333; margin-bottom: 30rpx; }
    .artice_nr .artice_main h5{ font-size: 28rpx; color: #333; margin-bottom: 28rpx; }
    .artice_nr .artice_main h6{ font-size: 26rpx; color: #333; margin-bottom: 26rpx; }
    .comment .no_comment{ width: 100%; margin: 20rpx 0; text-align: center; font-size: 28rpx; color: #333; line-height: 40rpx; }
    .artice_nr .artice_main table{ font-family:arial; font-size:24rpx; border-left:1px solid #e0e0e0;border-top:1px solid #e0e0e0; text-align:center; width:100%; line-height: 40rpx; text-indent:0; margin-bottom: 30rpx;}
    .artice_nr .artice_main table th{ padding: 10rpx; border-right:1px solid #e0e0e0;border-bottom:1px solid #e0e0e0;color:#666; background:#f2f2f2;text-align:center;}
    .artice_nr .artice_main table th a{font-size:24rpx;color:#666;}
    .artice_nr .artice_main table td{border-right:1px solid #e0e0e0;border-bottom:1px solid #e0e0e0;padding:10rpx;color:#333;}
    .artice_nr .artice_main table td image{display:inline-block;vertical-align:-5px;margin:0;}
    
    // 相关推荐
    .recommend{ 
        padding: 20rpx 24rpx 20rpx 24rpx; 
        background:rgba(0,0,0,0.04); 
        .recommend_bt{
            line-height: 52rpx; 
            margin-bottom: 20rpx; 
            font-size: 36rpx; 
            font-weight: bold; 
            color: #000;
            image{
                height: 36rpx; 
                width: 34rpx;
                margin: 8rpx 10rpx 0 0;
                vertical-align: top;
            }
        }
        .recommend_list{ 
            background: #fff; 
            padding: 16rpx 20rpx 16rpx 20rpx; 
            overflow: hidden; 
            .recommend_list_dl{
                margin-bottom: 16rpx;
            }
            .recommend_list_info{
                overflow: hidden; 
                height: 34rpx; 
                line-height: 34rpx;
                font-size: 24rpx;
                .recommend_author{
                    color:#52A3FF;  
                    margin-right: 16rpx; 
                    float: left;
                }
                .recommend_top{ 
                    float: left; 
                    color: #FF2600; 
                    line-height: 34rpx;
                    padding: 0 20rpx; 
                    background:rgba(230,0,18,0.1); 
                    border-radius: 18rpx;
                }
                .recommend_view{ 
                    float: right; 
                    color: #ADADAD;
                    image{ 
                        vertical-align: middle; 
                        height: 18rpx; 
                        width: 28rpx; 
                        margin-right: 4rpx;
                    }
                }
            }
            .three_img{
                .recommend_list_bt{ 
                    font-size: 30rpx; 
                    color:#000; 
                    line-height: 42rpx; 
                    white-space: nowrap; 
                    text-overflow: ellipsis; 
                    overflow: hidden; 
                    font-weight: bold; 
                    margin-bottom: 16rpx;
                }
                .recommend_list_img {
                    justify-content: space-between;
                    margin: 0 0 16rpx 0;
                    image{
                        width: 210rpx;
                        height: 140rpx;
                        display: block;
                    }
                }
            }
            .one_img{
                .recommend_list_dd{
                    position: relative;
                }
                image{
                    width: 276rpx;
                    height: 184rpx;
                    display: block;
                }
                .recommend_list_bt{
                    padding-right: 20rpx; 
                    position: relative;
                    font-size: 30rpx; 
                    color: #000000;
                    line-height: 42rpx; 
                    overflow: hidden; 
                    font-weight: bold; 
                    text-overflow: -o-ellipsis-lastline; 
                    text-overflow: ellipsis; 
                    display: -webkit-box; 
                    -webkit-line-clamp: 2; 
                    -webkit-box-orient: vertical;
                }
                .recommend_list_info{
                    position: absolute; 
                    bottom: 0; 
                    left: 0; 
                    right: 20rpx;
                    .recommend_view{
                        image{
                            display: inline-block;
                        }
                    }
                }
            }
        }
    }

    
</style>